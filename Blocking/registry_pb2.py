# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: registry.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import server_pb2 as server__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eregistry.proto\x1a\x0cserver.proto\"3\n\x16registerReplicaRequest\x12\x19\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0b\x32\x08.Address\"E\n\x17registerReplicaResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x1a\n\x08paddress\x18\x02 \x01(\x0b\x32\x08.Address\"\x1d\n\rClientRequest\x12\x0c\n\x04uuid\x18\x01 \x01(\t\"=\n\x0e\x43lientResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x1b\n\taddresses\x18\x02 \x03(\x0b\x32\x08.Address\"I\n\x0eRegistryServer\x12\x1a\n\x08replicas\x18\x01 \x03(\x0b\x32\x08.Address\x12\x1b\n\tp_address\x18\x02 \x01(\x0b\x32\x08.Address2\x87\x01\n\x08Register\x12\x46\n\x0fregisterReplica\x12\x17.registerReplicaRequest\x1a\x18.registerReplicaResponse\"\x00\x12\x33\n\x0eGetReplicaList\x12\x0e.ClientRequest\x1a\x0f.ClientResponse\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'registry_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REGISTERREPLICAREQUEST._serialized_start=32
  _REGISTERREPLICAREQUEST._serialized_end=83
  _REGISTERREPLICARESPONSE._serialized_start=85
  _REGISTERREPLICARESPONSE._serialized_end=154
  _CLIENTREQUEST._serialized_start=156
  _CLIENTREQUEST._serialized_end=185
  _CLIENTRESPONSE._serialized_start=187
  _CLIENTRESPONSE._serialized_end=248
  _REGISTRYSERVER._serialized_start=250
  _REGISTRYSERVER._serialized_end=323
  _REGISTER._serialized_start=326
  _REGISTER._serialized_end=461
# @@protoc_insertion_point(module_scope)
